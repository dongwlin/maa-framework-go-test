name: test

on:
  push:
    branches:
      - "**"

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [ x86_64 ]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Download MaaFramework
        uses: robinraju/release-downloader@v1.10
        with:
          repository: MaaXYZ/MaaFramework
          latest: true
          fileName: "MAA-win-${{ matrix.arch }}*"
          out-file-path: "${{ github.workspace }}/deps"
          extract: true

      - name: Build
        env:
          CGO_CFLAGS: "-I${{ github.workspace }}\\deps\\include"
          CGO_LDFLAGS: "-L${{ github.workspace }}\\deps\\bin -lMaaFramework -lMaaToolkit"
        run: |
          go build -v -tags customenv -o ./build/demo.exe

      - name: Run ready
        run: |
          mkdir -p TestingDataSet/PipelineSmoking/resource/model/ocr
          cp -r TestingDataSet/MaaCommonAssets/OCR/ppocr_v4/zh_cn TestingDataSet/PipelineSmoking/resource/model/ocr
          cp -r TestingDataSet build/TestingDataSet
          cp deps/bin/* build/

      - name: Run
        run: |
          ./build/demo.exe


  ubuntu:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        arch: [ x86_64 ]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Download MaaFramework
        uses: robinraju/release-downloader@v1.10
        with:
          repository: MaaXYZ/MaaFramework
          latest: true
          fileName: "MAA-linux-${{ matrix.arch }}*"
          out-file-path: "deps"
          extract: true

      - name: Build
        run: |
          gcc --version
          export CGO_CFLAGS="-I${{ github.workspace }}/deps/include"
          export CGO_LDFLAGS="-L${{ github.workspace }}/deps/bin -lMaaFramework -lMaaToolkit"
          go build -v -tags customenv -o demo

      - name: Run
        run: |
          mkdir -p TestingDataSet/PipelineSmoking/resource/model/ocr
          cp -r TestingDataSet/MaaCommonAssets/OCR/ppocr_v4/zh_cn TestingDataSet/PipelineSmoking/resource/model/ocr
          export LD_LIBRARY_PATH=/__w//deps/bin:$LD_LIBRARY_PATH
          ./demo

  macos:
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x86_64
          - os: macos-14
            arch: aarch64
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Download MaaFramework
        uses: robinraju/release-downloader@v1.10
        with:
          repository: MaaXYZ/MaaFramework
          latest: true
          fileName: "MAA-macos-${{ matrix.arch }}*"
          out-file-path: "deps"
          extract: true

      - name: Build
        run: |
          export CGO_CFLAGS="-I${{ github.workspace }}/deps/include"
          export CGO_LDFLAGS="-L${{ github.workspace }}/deps/bin -lMaaFramework -lMaaToolkit"
          go build -v -tags customenv -o demo

      - name: Run
        run: |
          mkdir -p TestingDataSet/PipelineSmoking/resource/model/ocr
          cp -r TestingDataSet/MaaCommonAssets/OCR/ppocr_v4/zh_cn TestingDataSet/PipelineSmoking/resource/model/ocr
          export DYLD_LIBRARY_PATH=${{ github.workspace }}/deps/bin:$DYLD_LIBRARY_PATH
          ./demo
          


